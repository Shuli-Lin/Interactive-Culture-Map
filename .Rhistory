req(info())
paste("省份：", info()$Province_CN, " Shengfen:", info()$Province_PY)
})
output$selected_song <- renderText({
req(info())
paste("歌曲：", info()$FolkSong_CN, " Pinyin:", info()$FolkSong_PY)
})
output$selected_song_title_en <- renderText({
req(info())
paste("Song Title (EN):", info()$FolkSong_EN)
})
# 民歌地图
output$folkMap <- renderLeaflet({
leaflet(china_data) %>%
addTiles() %>%
addPolygons(
fillColor = "orange",
color = "white",
weight = 1,
opacity = 1,
fillOpacity = 0.7,
layerId = ~Province_CN,
label = ~paste0(Province_CN, " - ", FolkSong_CN)
)
})
# 文明地图
output$civilizationMap <- renderLeaflet({
leaflet(china_civilization) %>%
addTiles() %>%
addPolygons(
fillColor = "purple",
color = "white",
weight = 1,
opacity = 1,
fillOpacity = 0.6,
layerId = ~Province_CN,
label = ~paste0(Province_CN, ' - ', `文明类型(Civilization Type)`)
)
})
observeEvent(input$civilizationMap_shape_click, {
province <- input$civilizationMap_shape_click$id
info_civ <- china_civilization %>% filter(Province_CN == province)
output$selected_civ_province <- renderText({ paste("省份：", info_civ$Province_CN) })
output$selected_civ_type <- renderText({ paste("文明类型：", info_civ$`文明类型(Civilization Type)`) })
output$selected_civ_intro <- renderText({ paste("文化简介：", info_civ$`中文文化简介(CN Overview)`) })
output$selected_civ_pinyin <- renderText({ paste("拼音：", info_civ$汉语拼音) })
output$selected_civ_intro_en <- renderText({ paste("Overview (EN):", info_civ$`English Summary`) })
})
}
# -------------------------------
# 启动应用
# -------------------------------
shinyApp(ui, server)
# -------------------------------
# app.R 完整版
# -------------------------------
library(shiny)
library(leaflet)
library(sf)
library(dplyr)
library(readxl)
library(shinydashboard)
# -------------------------------
# 读取数据
# -------------------------------
china <- st_read("data/china_provinces.geojson")
# 修正名称
corrections <- c(
"Guangzhou Province" = "Guangdong Province",
"Ningxia Ningxia Hui Autonomous Region" = "Ningxia Hui Autonomous Region"
)
china <- china %>%
mutate(shapeName = ifelse(shapeName %in% names(corrections),
corrections[match(shapeName, names(corrections))],
shapeName))
china <- china %>%
mutate(Province_CN = case_when(
shapeName == "Anhui Province" ~ "安徽省",
shapeName == "Beijing Municipality" ~ "北京市",
shapeName == "Chongqing Municipality" ~ "重庆市",
shapeName == "Fujian Province" ~ "福建省",
shapeName == "Gansu Province" ~ "甘肃省",
shapeName == "Guangdong Province" ~ "广东省",
shapeName == "Guangxi Zhuang Autonomous Region" ~ "广西壮族自治区",
shapeName == "Guizhou Province" ~ "贵州省",
shapeName == "Hainan Province" ~ "海南省",
shapeName == "Hebei Province" ~ "河北省",
shapeName == "Heilongjiang Province" ~ "黑龙江省",
shapeName == "Henan Province" ~ "河南省",
shapeName == "Hong Kong Special Administrative Region" ~ "香港特别行政区",
shapeName == "Hubei Province" ~ "湖北省",
shapeName == "Hunan Province" ~ "湖南省",
shapeName == "Inner Mongolia Autonomous Region" ~ "内蒙古自治区",
shapeName == "Jiangsu Province" ~ "江苏省",
shapeName == "Jiangxi Province" ~ "江西省",
shapeName == "Jilin Province" ~ "吉林省",
shapeName == "Liaoning Province" ~ "辽宁省",
shapeName == "Macau Special Administrative Region" ~ "澳门特别行政区",
shapeName == "Ningxia Hui Autonomous Region" ~ "宁夏回族自治区",
shapeName == "Qinghai Province" ~ "青海省",
shapeName == "Shaanxi Province" ~ "陕西省",
shapeName == "Shandong Province" ~ "山东省",
shapeName == "Shanghai Municipality" ~ "上海市",
shapeName == "Shanxi Province" ~ "山西省",
shapeName == "Sichuan Province" ~ "四川省",
shapeName == "Tianjin Municipality" ~ "天津市",
shapeName == "Tibet Autonomous Region" ~ "西藏自治区",
shapeName == "Xinjiang Uyghur Autonomous Region" ~ "新疆维吾尔自治区",
shapeName == "Yunnan Province" ~ "云南省",
shapeName == "Zhejiang Province" ~ "浙江省",
shapeName == "Taiwan Province" ~ "台湾省",
TRUE ~ shapeName
))
province_info <- read_excel("data/province_info.xlsx")
china_data <- china %>%
left_join(province_info, by = "Province_CN")
civilization_table <- read_excel("data/civilization.xlsx")
china_civilization <- left_join(china, civilization_table, by = "Province_CN")
# -------------------------------
# UI
# -------------------------------
ui <- dashboardPage(
dashboardHeader(title = "中国地方文化地图"),
dashboardSidebar(
sidebarMenu(
menuItem("民歌地图 🎵", tabName = "folk", icon = icon("music")),
menuItem("文明地图 🏺", tabName = "civilization", icon = icon("globe-asia"))
)
),
dashboardBody(
tags$head(
tags$script(HTML("
// ====== JS 音频控制逻辑 ======
var audioPool = {};
var playlist = [];
var currentIndex = -1;
var currentAudio = null;
Shiny.addCustomMessageHandler('preloadAudio', function(data) {
data.forEach(function(filePath) {
if (!(filePath in audioPool)) {
var audio = new Audio(filePath);
audio.preload = 'auto';
audioPool[filePath] = audio;
playlist.push(filePath);
}
});
});
Shiny.addCustomMessageHandler('playAudio', function(filePath) {
if(filePath in audioPool){
if(currentAudio) currentAudio.pause();
currentAudio = audioPool[filePath];
currentAudio.currentTime = 0;
currentAudio.play();
currentIndex = playlist.indexOf(filePath);
updateProgress();
}
});
function playNext() {
if(currentIndex < playlist.length - 1){
currentIndex++;
Shiny.setInputValue('audio_click_play', playlist[currentIndex]);
}
}
function playPrev() {
if(currentIndex > 0){
currentIndex--;
Shiny.setInputValue('audio_click_play', playlist[currentIndex]);
}
}
function updateProgress() {
if(currentAudio){
var progressBar = document.getElementById('audioProgress');
progressBar.max = currentAudio.duration || 0;
setInterval(function(){
if(currentAudio && progressBar){
progressBar.value = currentAudio.currentTime;
}
}, 500);
}
}
function togglePlayPause() {
if(currentAudio){
if(currentAudio.paused) currentAudio.play();
else currentAudio.pause();
}
}
"))
),
tabItems(
tabItem(tabName = "folk",
fluidRow(
box(width = 8,
leafletOutput("folkMap", height = 600)),
box(width = 4,
title = "🎶 省份民歌播放",
textOutput("selected_province"),
textOutput("selected_song_title_en"),
textOutput("selected_song"),
div(
style = "margin-top:10px;",
actionButton("prev_btn", "⏮️ Prev"),
actionButton("play_btn", "▶️ Play/Pause"),
actionButton("next_btn", "⏭️ Next"),
br(),
tags$input(id="audioProgress", type="range", min=0, value=0, style="width:100%;")
)
)
)
),
tabItem(tabName = "civilization",
fluidRow(
box(width = 8,
leafletOutput("civilizationMap", height = 600)),
box(width = 4,
title = "🏺 文明类型信息",
textOutput("selected_civ_province"),
textOutput("selected_civ_type"),
textOutput("selected_civ_intro"),
textOutput("selected_civ_intro_en"),
textOutput("selected_civ_pinyin"))
)
)
)
)
)
# -------------------------------
# Server
# -------------------------------
server <- function(input, output, session) {
info <- reactiveVal(NULL)
# 预加载音频
observe({
audio_files <- china_data$AudioFile
audio_paths <- paste0("audio/", audio_files)
session$sendCustomMessage("preloadAudio", audio_paths)
})
# 点击民歌地图播放
observeEvent(input$folkMap_shape_click, {
province <- input$folkMap_shape_click$id
info_subset <- china_data %>% filter(Province_CN == province)
info(info_subset)
session$sendCustomMessage(
"playAudio",
paste0("audio/", info_subset$AudioFile)
)
})
# JS 播放控制按钮
observeEvent(input$play_btn, { session$sendCustomMessage("playAudioToggle", NULL) })
observeEvent(input$prev_btn, { session$sendCustomMessage("playPrev", NULL) })
observeEvent(input$next_btn, { session$sendCustomMessage("playNext", NULL) })
# 显示信息
output$selected_province <- renderText({
req(info())
paste("省份：", info()$Province_CN, " Shengfen:", info()$Province_PY)
})
output$selected_song <- renderText({
req(info())
paste("歌曲：", info()$FolkSong_CN, " Pinyin:", info()$FolkSong_PY)
})
output$selected_song_title_en <- renderText({
req(info())
paste("Song Title (EN):", info()$FolkSong_EN)
})
# 民歌地图
output$folkMap <- renderLeaflet({
leaflet(china_data) %>%
addTiles() %>%
addPolygons(
fillColor = "orange",
color = "white",
weight = 1,
opacity = 1,
fillOpacity = 0.7,
layerId = ~Province_CN,
label = ~paste0(Province_CN, " - ", FolkSong_CN)
)
})
# 文明地图
output$civilizationMap <- renderLeaflet({
leaflet(china_civilization) %>%
addTiles() %>%
addPolygons(
fillColor = "purple",
color = "white",
weight = 1,
opacity = 1,
fillOpacity = 0.6,
layerId = ~Province_CN,
label = ~paste0(Province_CN, ' - ', `文明类型(Civilization Type)`)
)
})
observeEvent(input$civilizationMap_shape_click, {
province <- input$civilizationMap_shape_click$id
info_civ <- china_civilization %>% filter(Province_CN == province)
output$selected_civ_province <- renderText({ paste("省份：", info_civ$Province_CN) })
output$selected_civ_type <- renderText({ paste("文明类型：", info_civ$`文明类型(Civilization Type)`) })
output$selected_civ_intro <- renderText({ paste("文化简介：", info_civ$`中文文化简介(CN Overview)`) })
output$selected_civ_pinyin <- renderText({ paste("拼音：", info_civ$汉语拼音) })
output$selected_civ_intro_en <- renderText({ paste("Overview (EN):", info_civ$`English Summary`) })
})
}
# -------------------------------
# 启动应用
# -------------------------------
shinyApp(ui, server)
runApp('apptest.R')
library(shiny)
library(leaflet)
library(sf)
library(dplyr)
library(readxl)
library(shinydashboard)
# -------------------------------
# 数据读取
# -------------------------------
china <- st_read("data/china_provinces.geojson")
corrections <- c(
"Guangzhou Province" = "Guangdong Province",
"Ningxia Ningxia Hui Autonomous Region" = "Ningxia Hui Autonomous Region"
)
china <- china %>%
mutate(shapeName = ifelse(shapeName %in% names(corrections),
corrections[match(shapeName, names(corrections))],
shapeName))
china <- china %>%
mutate(Province_CN = case_when(
shapeName == "Anhui Province" ~ "安徽省",
shapeName == "Beijing Municipality" ~ "北京市",
shapeName == "Chongqing Municipality" ~ "重庆市",
shapeName == "Fujian Province" ~ "福建省",
shapeName == "Gansu Province" ~ "甘肃省",
shapeName == "Guangdong Province" ~ "广东省",
shapeName == "Guangxi Zhuang Autonomous Region" ~ "广西壮族自治区",
shapeName == "Guizhou Province" ~ "贵州省",
shapeName == "Hainan Province" ~ "海南省",
shapeName == "Hebei Province" ~ "河北省",
shapeName == "Heilongjiang Province" ~ "黑龙江省",
shapeName == "Henan Province" ~ "河南省",
shapeName == "Hong Kong Special Administrative Region" ~ "香港特别行政区",
shapeName == "Hubei Province" ~ "湖北省",
shapeName == "Hunan Province" ~ "湖南省",
shapeName == "Inner Mongolia Autonomous Region" ~ "内蒙古自治区",
shapeName == "Jiangsu Province" ~ "江苏省",
shapeName == "Jiangxi Province" ~ "江西省",
shapeName == "Jilin Province" ~ "吉林省",
shapeName == "Liaoning Province" ~ "辽宁省",
shapeName == "Macau Special Administrative Region" ~ "澳门特别行政区",
shapeName == "Ningxia Hui Autonomous Region" ~ "宁夏回族自治区",
shapeName == "Qinghai Province" ~ "青海省",
shapeName == "Shaanxi Province" ~ "陕西省",
shapeName == "Shandong Province" ~ "山东省",
shapeName == "Shanghai Municipality" ~ "上海市",
shapeName == "Shanxi Province" ~ "山西省",
shapeName == "Sichuan Province" ~ "四川省",
shapeName == "Tianjin Municipality" ~ "天津市",
shapeName == "Tibet Autonomous Region" ~ "西藏自治区",
shapeName == "Xinjiang Uyghur Autonomous Region" ~ "新疆维吾尔自治区",
shapeName == "Yunnan Province" ~ "云南省",
shapeName == "Zhejiang Province" ~ "浙江省",
shapeName == "Taiwan Province" ~ "台湾省",
TRUE ~ shapeName
))
province_info <- read_excel("data/province_info.xlsx")
china_data <- china %>%
left_join(province_info, by = "Province_CN")
civilization_table <- read_excel("data/civilization.xlsx")
china_civilization <- left_join(china, civilization_table, by = "Province_CN")
# -------------------------------
# UI
# -------------------------------
ui <- dashboardPage(
dashboardHeader(title = "中国地方文化地图"),
dashboardSidebar(
sidebarMenu(
menuItem("民歌地图 🎵", tabName = "folk", icon = icon("music")),
menuItem("文明地图 🏺", tabName = "civilization", icon = icon("globe-asia"))
)
),
dashboardBody(
tags$head(
tags$script(HTML("
var currentAudio = new Audio();
currentAudio.preload = 'auto';
Shiny.addCustomMessageHandler('playAudio', function(filePath) {
if(!filePath) return;
if(!currentAudio.paused) currentAudio.pause();
currentAudio.src = filePath;
currentAudio.currentTime = 0;
currentAudio.play();
var durationEl = document.getElementById('audioDuration');
currentAudio.onloadedmetadata = function() {
durationEl.textContent = formatTime(currentAudio.currentTime) + ' / ' + formatTime(currentAudio.duration);
document.getElementById('audioProgress').max = currentAudio.duration;
};
currentAudio.ontimeupdate = function() {
document.getElementById('audioProgress').value = currentAudio.currentTime;
durationEl.textContent = formatTime(currentAudio.currentTime) + ' / ' + formatTime(currentAudio.duration);
};
});
function togglePlayPause() {
if(currentAudio.paused) currentAudio.play();
else currentAudio.pause();
}
function formatTime(seconds) {
var m = Math.floor(seconds / 60);
var s = Math.floor(seconds % 60);
return m + ':' + (s < 10 ? '0' + s : s);
}
"))
),
tabItems(
tabItem(tabName = "folk",
fluidRow(
box(width = 8,
leafletOutput("folkMap", height = 600)),
box(width = 4,
title = "🎶 省份民歌播放",
textOutput("selected_province"),
textOutput("selected_song_title_en"),
textOutput("selected_song"),
div(
style = "margin-top:10px;",
actionButton("play_btn", "▶️ Play/Pause"),
br(),
tags$input(id="audioProgress", type="range", min=0, value=0, style="width:100%;"),
div(id="audioDuration", style="text-align:right; font-size:14px; margin-top:2px;")
)
)
)
),
tabItem(tabName = "civilization",
fluidRow(
box(width = 8,
leafletOutput("civilizationMap", height = 600)),
box(width = 4,
title = "🏺 文明类型信息",
textOutput("selected_civ_province"),
textOutput("selected_civ_type"),
textOutput("selected_civ_intro"),
textOutput("selected_civ_intro_en"),
textOutput("selected_civ_pinyin"))
)
)
)
)
)
# -------------------------------
# Server
# -------------------------------
server <- function(input, output, session) {
info <- reactiveVal(NULL)
observeEvent(input$folkMap_shape_click, {
province <- input$folkMap_shape_click$id
info_subset <- china_data %>% filter(Province_CN == province)
info(info_subset)
session$sendCustomMessage(
"playAudio",
paste0("audio/", info_subset$AudioFile)
)
})
observeEvent(input$play_btn, {
session$sendCustomMessage("togglePlayPause", NULL)
})
output$selected_province <- renderText({
req(info())
paste("省份：", info()$Province_CN, " Shengfen:", info()$Province_PY)
})
output$selected_song <- renderText({
req(info())
paste("歌曲：", info()$FolkSong_CN, " Pinyin:", info()$FolkSong_PY)
})
output$selected_song_title_en <- renderText({
req(info())
paste("Song Title (EN):", info()$FolkSong_EN)
})
output$folkMap <- renderLeaflet({
leaflet(china_data) %>%
addTiles() %>%
addPolygons(
fillColor = "orange",
color = "white",
weight = 1,
opacity = 1,
fillOpacity = 0.7,
layerId = ~Province_CN,
label = ~paste0(Province_CN, " - ", FolkSong_CN)
)
})
output$civilizationMap <- renderLeaflet({
leaflet(china_civilization) %>%
addTiles() %>%
addPolygons(
fillColor = "purple",
color = "white",
weight = 1,
opacity = 1,
fillOpacity = 0.6,
layerId = ~Province_CN,
label = ~paste0(Province_CN, ' - ', `文明类型(Civilization Type)`)
)
})
observeEvent(input$civilizationMap_shape_click, {
province <- input$civilizationMap_shape_click$id
info_civ <- china_civilization %>% filter(Province_CN == province)
output$selected_civ_province <- renderText({ paste("省份：", info_civ$Province_CN) })
output$selected_civ_type <- renderText({ paste("文明类型：", info_civ$`文明类型(Civilization Type)`) })
output$selected_civ_intro <- renderText({ paste("文化简介：", info_civ$`中文文化简介(CN Overview)`) })
output$selected_civ_pinyin <- renderText({ paste("拼音：", info_civ$汉语拼音) })
output$selected_civ_intro_en <- renderText({ paste("Overview (EN):", info_civ$`English Summary`) })
})
}
shinyApp(ui, server)
